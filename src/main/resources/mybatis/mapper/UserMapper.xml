<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzg.mapper.UserMapper" >
    <!--开启二级缓存-->
<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->
    <resultMap id="BaseResultMap" type="com.xzg.domain.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
         <result column="online" property="online" jdbcType="CHAR" />
    </resultMap>
    
     <resultMap id="FriendsResultMap" type="com.xzg.domain.User2" >
        <id property="id" column="id"/>   
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
         <result column="online" property="online" jdbcType="CHAR" />
         <collection property="friends" ofType="com.xzg.domain.FriendsInfo" javaType="java.util.ArrayList" column="id">
         	 <result property="user_id" column="user_id" javaType="int"/>
         	 <result property="friends_id" column="friends_id" javaType="int"/>
         	 <result property="user_sex" column="userSex" javaType = "com.xzg.domain.UserSexEnum"/>
         </collection>
    </resultMap>
 
 
 
    <select id="getClass" parameterType="int" resultType="map">
        select c.friends_id, t.id from friends_info c, t_user t  where c.user_id = t.id and c.user_id=#{id}
    </select>


    <sql id="Base_Column_List" >
        id, user_name, password,age,ip,email,online
    </sql>
    <select id="getAll" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
       FROM t_user
    </select>

    <select id="getOne" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        SELECT 
       <include refid="Base_Column_List" />
       FROM t_user
       WHERE id = #{id}
    </select>
    <select id="isExits" parameterType="java.lang.Integer" resultType="java.lang.Long" >
        SELECT 
      			id
       FROM 
       			t_user
       WHERE 
       		id = #{id}
      AND
      		password=#{password}
    </select>
    
    <select id="returnUserByPw" resultMap="BaseResultMap" >
        SELECT 
      			<include refid="Base_Column_List" />
       FROM 
       			t_user
       WHERE 
       		id = #{id}
      AND
      		password=#{password}
    </select>
    <insert id="insertUser" parameterType="com.xzg.domain.User" >
       INSERT INTO 
            t_user
            (user_Name,password,age,ip,email) 
        VALUES
            (#{userName}, #{password}, #{age},#{ip},#{email})
    </insert>

    <update id="updateUser" parameterType="com.xzg.domain.User" >
       UPDATE 
            t_user 
       SET 
        <if test="userName != null">user_Name = #{userName},</if>
        <if test="passWord != null">email = #{email},</if>
        age = #{age}
       WHERE 
            id = #{id}
    </update>
<update id="updateUserIp" parameterType="com.xzg.domain.User" >
       UPDATE 
            t_user
       SET 
        	ip = #{ip}
       WHERE 
            id = #{id}
    </update>
    <delete id="deleteUser" parameterType="java.lang.Integer" >
       DELETE FROM
             t_user 
       WHERE 
             id =#{id}
    </delete>
    <select id="findFriendsByUser" parameterType="java.lang.Integer" resultMap="FriendsResultMap">
    select f.user_id,f.* from friends_info f left join t_user t on t.id = f.user_id where t.id=#{id};
    </select>
</mapper>